#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_NeueMontreal_Bold_otf_25_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0022, quotedbl], Kerning dist = -2)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0022, quotedbl], Kerning dist = 1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0023, numbersign], Kerning dist = -1)
    { 0x0032,  1 },  // (First char = [0x0032, two], Second char = [0x0025, percent], Kerning dist = 1)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0025, percent], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, seven], Second char = [0x0025, percent], Kerning dist = 1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0026, ampersand], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0026, ampersand], Kerning dist = -2)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0026, ampersand], Kerning dist = -1)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0027, quotesingle], Kerning dist = -2)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0027, quotesingle], Kerning dist = 1)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0029, parenright], Kerning dist = 1)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x002A, asterisk], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x002A, asterisk], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x002A, asterisk], Kerning dist = 1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00E6, -1 },  // (First char = [0x00E6, ae], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00E8, -1 },  // (First char = [0x00E8, egrave], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00E9, -1 },  // (First char = [0x00E9, eacute], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00EA, -1 },  // (First char = [0x00EA, ecircumflex], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00EB, -1 },  // (First char = [0x00EB, edieresis], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00F2, -1 },  // (First char = [0x00F2, ograve], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00F3, -1 },  // (First char = [0x00F3, oacute], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00F4, -1 },  // (First char = [0x00F4, ocircumflex], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00F5, -1 },  // (First char = [0x00F5, otilde], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00F6, -1 },  // (First char = [0x00F6, odieresis], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, oslash], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x00FE, -1 },  // (First char = [0x00FE, thorn], Second char = [0x002A, asterisk], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x002B, plus], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, seven], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0045,  1 },  // (First char = [0x0045, E], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00C6,  1 },  // (First char = [0x00C6, AE], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x00C8,  1 },  // (First char = [0x00C8, Egrave], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x00C9,  1 },  // (First char = [0x00C9, Eacute], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x00CA,  1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x00CB,  1 },  // (First char = [0x00CB, Edieresis], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x002D, hyphen], Kerning dist = -3)
    { 0x0037, -2 },  // (First char = [0x0037, seven], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0045,  1 },  // (First char = [0x0045, E], Second char = [0x002E, period], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x002E, period], Kerning dist = 1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -3)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00C6,  1 },  // (First char = [0x00C6, AE], Second char = [0x002E, period], Kerning dist = 1)
    { 0x00C8,  1 },  // (First char = [0x00C8, Egrave], Second char = [0x002E, period], Kerning dist = 1)
    { 0x00C9,  1 },  // (First char = [0x00C9, Eacute], Second char = [0x002E, period], Kerning dist = 1)
    { 0x00CA,  1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x002E, period], Kerning dist = 1)
    { 0x00CB,  1 },  // (First char = [0x00CB, Edieresis], Second char = [0x002E, period], Kerning dist = 1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x002E, period], Kerning dist = -3)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x002E, period], Kerning dist = -1)
    { 0x002F, -3 },  // (First char = [0x002F, slash], Second char = [0x002F, slash], Kerning dist = -3)
    { 0x0030, -1 },  // (First char = [0x0030, zero], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, seven], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0039, -1 },  // (First char = [0x0039, nine], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x0026, -1 },  // (First char = [0x0026, ampersand], Second char = [0x0031, one], Kerning dist = -1)
    { 0x0028, -1 },  // (First char = [0x0028, parenleft], Second char = [0x0031, one], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0031, one], Kerning dist = -2)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0031, one], Kerning dist = -1)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0031, one], Kerning dist = -2)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0031, one], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0031, one], Kerning dist = -1)
    { 0x005E, -1 },  // (First char = [0x005E, asciicircum], Second char = [0x0031, one], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0031, one], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0031, one], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0032, two], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0032, two], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0033, three], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0033, three], Kerning dist = -1)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x0034, four], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x0034, four], Kerning dist = -2)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0034, four], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0034, four], Kerning dist = -2)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0034, four], Kerning dist = -1)
    { 0x005B, -1 },  // (First char = [0x005B, bracketleft], Second char = [0x0034, four], Kerning dist = -1)
    { 0x007B, -1 },  // (First char = [0x007B, braceleft], Second char = [0x0034, four], Kerning dist = -1)
    { 0x00A3, -1 },  // (First char = [0x00A3, sterling], Second char = [0x0034, four], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0034, four], Kerning dist = -1)
    { 0x00B0, -2 },  // (First char = [0x00B0, degree], Second char = [0x0034, four], Kerning dist = -2)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0034, four], Kerning dist = -1)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x0034, four], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0035, five], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0035, five], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0035, five], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0035, five], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0035, five], Kerning dist = -1)
    { 0x00B0, -1 },  // (First char = [0x00B0, degree], Second char = [0x0035, five], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0035, five], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0036, six], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0036, six], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0036, six], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0036, six], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0036, six], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0036, six], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0036, six], Kerning dist = -1)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0026, -1 },  // (First char = [0x0026, ampersand], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x002B, -1 },  // (First char = [0x002B, plus], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, zero], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, seven], Second char = [0x0037, seven], Kerning dist = 1)
    { 0x003E, -1 },  // (First char = [0x003E, greater], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x00F7, -1 },  // (First char = [0x00F7, divide], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0038, eight], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0038, eight], Kerning dist = -1)
    { 0x0026, -1 },  // (First char = [0x0026, ampersand], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x003C, less], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x003F, question], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x003F, question], Kerning dist = -2)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x003F, question], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x003F, question], Kerning dist = 1)
    { 0x00E6, -1 },  // (First char = [0x00E6, ae], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00E8, -1 },  // (First char = [0x00E8, egrave], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00E9, -1 },  // (First char = [0x00E9, eacute], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00EA, -1 },  // (First char = [0x00EA, ecircumflex], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00EB, -1 },  // (First char = [0x00EB, edieresis], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00F2, -1 },  // (First char = [0x00F2, ograve], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00F3, -1 },  // (First char = [0x00F3, oacute], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00F4, -1 },  // (First char = [0x00F4, ocircumflex], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00F5, -1 },  // (First char = [0x00F5, otilde], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00F6, -1 },  // (First char = [0x00F6, odieresis], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, oslash], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x003F, question], Kerning dist = 1)
    { 0x00FE, -1 },  // (First char = [0x00FE, thorn], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0040, at], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0040, at], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0040, at], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0040, at], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0040, at], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0040, at], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0040, at], Kerning dist = -2)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0040, at], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0040, at], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x0041, A], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x0041, A], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x0041, A], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x0041, A], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0041, A], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0043, C], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0043, C], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0043, C], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0043, C], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0043, C], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0043, C], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0043, C], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0047, G], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0047, G], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0047, G], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0047, G], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0047, G], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0022, -3 },  // (First char = [0x0022, quotedbl], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0027, -3 },  // (First char = [0x0027, quotesingle], Second char = [0x004A, J], Kerning dist = -3)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -3)
    { 0x005B, -1 },  // (First char = [0x005B, bracketleft], Second char = [0x004A, J], Kerning dist = -1)
    { 0x007B, -1 },  // (First char = [0x007B, braceleft], Second char = [0x004A, J], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x004A, J], Kerning dist = -3)
    { 0x201D, -3 },  // (First char = [0x201D, quotedblright], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x004F, O], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x004F, O], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x004F, O], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x004F, O], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x004F, O], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x004F, O], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x004F, O], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0053, S], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0053, S], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0054, T], Kerning dist = -2)
    { 0x002D, -2 },  // (First char = [0x002D, hyphen], Second char = [0x0054, T], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0054, T], Kerning dist = -2)
    { 0x003A, -1 },  // (First char = [0x003A, colon], Second char = [0x0054, T], Kerning dist = -1)
    { 0x003B, -1 },  // (First char = [0x003B, semicolon], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x0054, T], Kerning dist = 1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x0054, T], Kerning dist = 1)
    { 0x005C, -2 },  // (First char = [0x005C, backslash], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -2)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00B7, -2 },  // (First char = [0x00B7, periodcentered], Second char = [0x0054, T], Kerning dist = -2)
    { 0x00BF, -2 },  // (First char = [0x00BF, questiondown], Second char = [0x0054, T], Kerning dist = -2)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00E7, -2 },  // (First char = [0x00E7, ccedilla], Second char = [0x0054, T], Kerning dist = -2)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0055, U], Kerning dist = -1)
    { 0x0026, -2 },  // (First char = [0x0026, ampersand], Second char = [0x0056, V], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0056, V], Kerning dist = -2)
    { 0x002D, -2 },  // (First char = [0x002D, hyphen], Second char = [0x0056, V], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0056, V], Kerning dist = -2)
    { 0x003A, -1 },  // (First char = [0x003A, colon], Second char = [0x0056, V], Kerning dist = -1)
    { 0x003B, -1 },  // (First char = [0x003B, semicolon], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0056, V], Kerning dist = 1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x0056, V], Kerning dist = 1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x0056, V], Kerning dist = 1)
    { 0x0059,  1 },  // (First char = [0x0059, Y], Second char = [0x0056, V], Kerning dist = 1)
    { 0x005C, -2 },  // (First char = [0x005C, backslash], Second char = [0x0056, V], Kerning dist = -2)
    { 0x005E, -1 },  // (First char = [0x005E, asciicircum], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00BF, -2 },  // (First char = [0x00BF, questiondown], Second char = [0x0056, V], Kerning dist = -2)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00DD,  1 },  // (First char = [0x00DD, Yacute], Second char = [0x0056, V], Kerning dist = 1)
    { 0x00E7, -1 },  // (First char = [0x00E7, ccedilla], Second char = [0x0056, V], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0057, W], Kerning dist = -2)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0057, W], Kerning dist = -1)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0057, W], Kerning dist = 1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x0057, W], Kerning dist = 1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x0057, W], Kerning dist = 1)
    { 0x0059,  1 },  // (First char = [0x0059, Y], Second char = [0x0057, W], Kerning dist = 1)
    { 0x005C, -2 },  // (First char = [0x005C, backslash], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00BF, -2 },  // (First char = [0x00BF, questiondown], Second char = [0x0057, W], Kerning dist = -2)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0057, W], Kerning dist = -1)
    { 0x00DD,  1 },  // (First char = [0x00DD, Yacute], Second char = [0x0057, W], Kerning dist = 1)
    { 0x00E7, -1 },  // (First char = [0x00E7, ccedilla], Second char = [0x0057, W], Kerning dist = -1)
    { 0x002A, -1 },  // (First char = [0x002A, asterisk], Second char = [0x0058, X], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0058, X], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0058, X], Kerning dist = -1)
    { 0x005E, -1 },  // (First char = [0x005E, asciicircum], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00AE, -1 },  // (First char = [0x00AE, registered], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00B7, -2 },  // (First char = [0x00B7, periodcentered], Second char = [0x0058, X], Kerning dist = -2)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0058, X], Kerning dist = -1)
    { 0x00E7, -1 },  // (First char = [0x00E7, ccedilla], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0023, -1 },  // (First char = [0x0023, numbersign], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0024, -1 },  // (First char = [0x0024, dollar], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0025, -1 },  // (First char = [0x0025, percent], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0029, -1 },  // (First char = [0x0029, parenright], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x002C, -3 },  // (First char = [0x002C, comma], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x002D, -3 },  // (First char = [0x002D, hyphen], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x002E, -3 },  // (First char = [0x002E, period], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x003A, -1 },  // (First char = [0x003A, colon], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x003B, -1 },  // (First char = [0x003B, semicolon], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x003C, -1 },  // (First char = [0x003C, less], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x003D, -1 },  // (First char = [0x003D, equal], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x003E, -1 },  // (First char = [0x003E, greater], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x003F, -1 },  // (First char = [0x003F, question], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0040, -2 },  // (First char = [0x0040, at], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0048, -1 },  // (First char = [0x0048, H], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004E, -1 },  // (First char = [0x004E, N], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x0059,  1 },  // (First char = [0x0059, Y], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x005C, -2 },  // (First char = [0x005C, backslash], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x005D, -1 },  // (First char = [0x005D, bracketright], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x005E, -1 },  // (First char = [0x005E, asciicircum], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x005F, -1 },  // (First char = [0x005F, underscore], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0060, -1 },  // (First char = [0x0060, grave], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x007C, -1 },  // (First char = [0x007C, bar], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x007D, -1 },  // (First char = [0x007D, braceright], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x007E, -1 },  // (First char = [0x007E, asciitilde], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A1, -1 },  // (First char = [0x00A1, exclamdown], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A2, -1 },  // (First char = [0x00A2, cent], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A3, -1 },  // (First char = [0x00A3, sterling], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A4, -1 },  // (First char = [0x00A4, currency], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A6, -1 },  // (First char = [0x00A6, brokenbar], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A7, -1 },  // (First char = [0x00A7, section], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A8, -1 },  // (First char = [0x00A8, dieresis], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00A9, -2 },  // (First char = [0x00A9, copyright], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00AC, -1 },  // (First char = [0x00AC, logicalnot], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00AE, -1 },  // (First char = [0x00AE, registered], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00AF, -1 },  // (First char = [0x00AF, macron], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00B0, -1 },  // (First char = [0x00B0, degree], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00B1, -1 },  // (First char = [0x00B1, plusminus], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00B4, -1 },  // (First char = [0x00B4, acute], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00B6, -1 },  // (First char = [0x00B6, paragraph], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00B7, -2 },  // (First char = [0x00B7, periodcentered], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00B8, -1 },  // (First char = [0x00B8, cedilla], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00BF, -3 },  // (First char = [0x00BF, questiondown], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00CC, -1 },  // (First char = [0x00CC, Igrave], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00CD, -1 },  // (First char = [0x00CD, Iacute], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00CE, -1 },  // (First char = [0x00CE, Icircumflex], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00CF, -1 },  // (First char = [0x00CF, Idieresis], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00D0, -2 },  // (First char = [0x00D0, Eth], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D1, -1 },  // (First char = [0x00D1, Ntilde], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00D2, -2 },  // (First char = [0x00D2, Ograve], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D3, -2 },  // (First char = [0x00D3, Oacute], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D4, -2 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D5, -2 },  // (First char = [0x00D5, Otilde], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D6, -2 },  // (First char = [0x00D6, Odieresis], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D7, -1 },  // (First char = [0x00D7, multiply], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00D8, -2 },  // (First char = [0x00D8, Oslash], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00DD,  1 },  // (First char = [0x00DD, Yacute], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x00DE, -1 },  // (First char = [0x00DE, Thorn], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00E7, -2 },  // (First char = [0x00E7, ccedilla], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00F0, -1 },  // (First char = [0x00F0, eth], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x2022, -1 },  // (First char = [0x2022, bullet], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, zero], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0032, -1 },  // (First char = [0x0032, two], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0033, -1 },  // (First char = [0x0033, three], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0035, -1 },  // (First char = [0x0035, five], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, six], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0038, -1 },  // (First char = [0x0038, eight], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0039, -1 },  // (First char = [0x0039, nine], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x005C, -3 },  // (First char = [0x005C, backslash], Second char = [0x005C, backslash], Kerning dist = -3)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0068, -2 },  // (First char = [0x0068, h], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x006D, -2 },  // (First char = [0x006D, m], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, n], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00DF, -1 },  // (First char = [0x00DF, germandbls], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00E6, -2 },  // (First char = [0x00E6, ae], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00E7, -1 },  // (First char = [0x00E7, ccedilla], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00E8, -2 },  // (First char = [0x00E8, egrave], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00E9, -2 },  // (First char = [0x00E9, eacute], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00EA, -2 },  // (First char = [0x00EA, ecircumflex], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00EB, -2 },  // (First char = [0x00EB, edieresis], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F1, -2 },  // (First char = [0x00F1, ntilde], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F2, -2 },  // (First char = [0x00F2, ograve], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F3, -2 },  // (First char = [0x00F3, oacute], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F4, -2 },  // (First char = [0x00F4, ocircumflex], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F5, -2 },  // (First char = [0x00F5, otilde], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F6, -2 },  // (First char = [0x00F6, odieresis], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F8, -2 },  // (First char = [0x00F8, oslash], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00F9, -1 },  // (First char = [0x00F9, ugrave], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00FA, -1 },  // (First char = [0x00FA, uacute], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00FB, -1 },  // (First char = [0x00FB, ucircumflex], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00FC, -1 },  // (First char = [0x00FC, udieresis], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x00FE, -2 },  // (First char = [0x00FE, thorn], Second char = [0x005C, backslash], Kerning dist = -2)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x005C, backslash], Kerning dist = -1)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x005D, bracketright], Kerning dist = 1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x005E, asciicircum], Kerning dist = -1)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x0061, a], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x0061, a], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0063, c], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0063, c], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x0063, c], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x0064, d], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0064, d], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0064, d], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x0064, d], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0065, e], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x0065, e], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0065, e], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0066, f], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0066, f], Kerning dist = 1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0066, f], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0066, f], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x0067, g], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0067, g], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0067, g], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x0067, g], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0028,  2 },  // (First char = [0x0028, parenleft], Second char = [0x006A, j], Kerning dist = 2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x006A, j], Kerning dist = 1)
    { 0x003A,  1 },  // (First char = [0x003A, colon], Second char = [0x006A, j], Kerning dist = 1)
    { 0x003B,  1 },  // (First char = [0x003B, semicolon], Second char = [0x006A, j], Kerning dist = 1)
    { 0x003B,  1 },  // (First char = [0x003B, semicolon], Second char = [0x006A, j], Kerning dist = 1)
    { 0x005B,  1 },  // (First char = [0x005B, bracketleft], Second char = [0x006A, j], Kerning dist = 1)
    { 0x0067,  1 },  // (First char = [0x0067, g], Second char = [0x006A, j], Kerning dist = 1)
    { 0x006A,  1 },  // (First char = [0x006A, j], Second char = [0x006A, j], Kerning dist = 1)
    { 0x0071,  1 },  // (First char = [0x0071, q], Second char = [0x006A, j], Kerning dist = 1)
    { 0x007B,  1 },  // (First char = [0x007B, braceleft], Second char = [0x006A, j], Kerning dist = 1)
    { 0x00A1,  1 },  // (First char = [0x00A1, exclamdown], Second char = [0x006A, j], Kerning dist = 1)
    { 0x00BF,  1 },  // (First char = [0x00BF, questiondown], Second char = [0x006A, j], Kerning dist = 1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x006D, m], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x006E, n], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x006F, o], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x006F, o], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x006F, o], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0070, p], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x0071, q], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0071, q], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0071, q], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0071, q], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x0071, q], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x0071, q], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0073, s], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0073, s], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0073, s], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x0073, s], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0074, t], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0074, t], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0074, t], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0074, t], Kerning dist = 1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0074, t], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0074, t], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0074, t], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0074, t], Kerning dist = 1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0075, u], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0026, -1 },  // (First char = [0x0026, ampersand], Second char = [0x0076, v], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0076, v], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0076, v], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0076, v], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0076, v], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, t], Second char = [0x0076, v], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0076, v], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0076, v], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0076, v], Kerning dist = 1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00C6, -1 },  // (First char = [0x00C6, AE], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00C8, -1 },  // (First char = [0x00C8, Egrave], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00C9, -1 },  // (First char = [0x00C9, Eacute], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00CA, -1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00CB, -1 },  // (First char = [0x00CB, Edieresis], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0076, v], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0076, v], Kerning dist = 1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0077, w], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0077, w], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0077, w], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0077, w], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0077, w], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, t], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0077, w], Kerning dist = 1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00C6, -1 },  // (First char = [0x00C6, AE], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00C8, -1 },  // (First char = [0x00C8, Egrave], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00C9, -1 },  // (First char = [0x00C9, Eacute], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00CA, -1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00CB, -1 },  // (First char = [0x00CB, Edieresis], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0077, w], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0077, w], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0077, w], Kerning dist = 1)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0078, x], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0078, x], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x0078, x], Kerning dist = -2)
    { 0x00E6, -1 },  // (First char = [0x00E6, ae], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00E7, -1 },  // (First char = [0x00E7, ccedilla], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00E8, -1 },  // (First char = [0x00E8, egrave], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00E9, -1 },  // (First char = [0x00E9, eacute], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00EA, -1 },  // (First char = [0x00EA, ecircumflex], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00EB, -1 },  // (First char = [0x00EB, edieresis], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F2, -1 },  // (First char = [0x00F2, ograve], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F3, -1 },  // (First char = [0x00F3, oacute], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F4, -1 },  // (First char = [0x00F4, ocircumflex], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F5, -1 },  // (First char = [0x00F5, otilde], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F6, -1 },  // (First char = [0x00F6, odieresis], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, oslash], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00FE, -1 },  // (First char = [0x00FE, thorn], Second char = [0x0078, x], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0079, y], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0079, y], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0079, y], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0079, y], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x0079, y], Kerning dist = 1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00C6, -1 },  // (First char = [0x00C6, AE], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00C8, -1 },  // (First char = [0x00C8, Egrave], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00C9, -1 },  // (First char = [0x00C9, Eacute], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00CA, -1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00CB, -1 },  // (First char = [0x00CB, Edieresis], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x0079, y], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x0079, y], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x007A, z], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x007D, braceright], Kerning dist = 1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x00A2, cent], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x00A7, section], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00A9, copyright], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00A9, copyright], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00A9, copyright], Kerning dist = -2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00AE, registered], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00AE, registered], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00AE, registered], Kerning dist = -2)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x00B0, degree], Kerning dist = -1)
    { 0x0035, -1 },  // (First char = [0x0035, five], Second char = [0x00B0, degree], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x00B7, periodcentered], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00B7, periodcentered], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00B7, periodcentered], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00B7, periodcentered], Kerning dist = -1)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x00B7, periodcentered], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00B7, periodcentered], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00B7, periodcentered], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00B7, periodcentered], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00B7, periodcentered], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C0, Agrave], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C0, Agrave], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x00C0, Agrave], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C1, Aacute], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C1, Aacute], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x00C1, Aacute], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C2, Acircumflex], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C2, Acircumflex], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x00C2, Acircumflex], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C3, Atilde], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C3, Atilde], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x00C3, Atilde], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C4, Adieresis], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C4, Adieresis], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x00C4, Adieresis], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C5, Aring], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C5, Aring], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x005C,  1 },  // (First char = [0x005C, backslash], Second char = [0x00C5, Aring], Kerning dist = 1)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00B7, -1 },  // (First char = [0x00B7, periodcentered], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0022, -3 },  // (First char = [0x0022, quotedbl], Second char = [0x00C6, AE], Kerning dist = -3)
    { 0x0027, -3 },  // (First char = [0x0027, quotesingle], Second char = [0x00C6, AE], Kerning dist = -3)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x00C6, AE], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x00C6, AE], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x0040, -1 },  // (First char = [0x0040, at], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x00C6, AE], Kerning dist = 1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x00A9, -1 },  // (First char = [0x00A9, copyright], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00D9, -1 },  // (First char = [0x00D9, Ugrave], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00DA, -1 },  // (First char = [0x00DA, Uacute], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00DB, -1 },  // (First char = [0x00DB, Ucircumflex], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00DC, -1 },  // (First char = [0x00DC, Udieresis], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x201D, -3 },  // (First char = [0x201D, quotedblright], Second char = [0x00C6, AE], Kerning dist = -3)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00C7, Ccedilla], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C7, Ccedilla], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00C7, Ccedilla], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00D2, Ograve], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00D2, Ograve], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00D2, Ograve], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00D3, Oacute], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00D3, Oacute], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00D3, Oacute], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00D4, Ocircumflex], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00D4, Ocircumflex], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00D4, Ocircumflex], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00D5, Otilde], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00D5, Otilde], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00D5, Otilde], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00D6, Odieresis], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00D6, Odieresis], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00D6, Odieresis], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00D8, Oslash], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00D8, Oslash], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00D8, Oslash], Kerning dist = -2)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00D9, Ugrave], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00DA, Uacute], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00DB, Ucircumflex], Kerning dist = -1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00DC, Udieresis], Kerning dist = -1)
    { 0x0023, -1 },  // (First char = [0x0023, numbersign], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0024, -1 },  // (First char = [0x0024, dollar], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0025, -1 },  // (First char = [0x0025, percent], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0029, -1 },  // (First char = [0x0029, parenright], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x002C, -3 },  // (First char = [0x002C, comma], Second char = [0x00DD, Yacute], Kerning dist = -3)
    { 0x002D, -3 },  // (First char = [0x002D, hyphen], Second char = [0x00DD, Yacute], Kerning dist = -3)
    { 0x002E, -3 },  // (First char = [0x002E, period], Second char = [0x00DD, Yacute], Kerning dist = -3)
    { 0x003A, -1 },  // (First char = [0x003A, colon], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x003B, -1 },  // (First char = [0x003B, semicolon], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x003C, -1 },  // (First char = [0x003C, less], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x003D, -1 },  // (First char = [0x003D, equal], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x003E, -1 },  // (First char = [0x003E, greater], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x003F, -1 },  // (First char = [0x003F, question], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0040, -2 },  // (First char = [0x0040, at], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0048, -1 },  // (First char = [0x0048, H], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x00DD, Yacute], Kerning dist = -3)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x004E, -1 },  // (First char = [0x004E, N], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x00DD, Yacute], Kerning dist = 1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x00DD, Yacute], Kerning dist = 1)
    { 0x0059,  1 },  // (First char = [0x0059, Y], Second char = [0x00DD, Yacute], Kerning dist = 1)
    { 0x005C, -2 },  // (First char = [0x005C, backslash], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x005D, -1 },  // (First char = [0x005D, bracketright], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x005E, -1 },  // (First char = [0x005E, asciicircum], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x005F, -1 },  // (First char = [0x005F, underscore], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0060, -1 },  // (First char = [0x0060, grave], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x007C, -1 },  // (First char = [0x007C, bar], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x007D, -1 },  // (First char = [0x007D, braceright], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x007E, -1 },  // (First char = [0x007E, asciitilde], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A1, -1 },  // (First char = [0x00A1, exclamdown], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A2, -1 },  // (First char = [0x00A2, cent], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A3, -1 },  // (First char = [0x00A3, sterling], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A4, -1 },  // (First char = [0x00A4, currency], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A5, -1 },  // (First char = [0x00A5, yen], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A6, -1 },  // (First char = [0x00A6, brokenbar], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A7, -1 },  // (First char = [0x00A7, section], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A8, -1 },  // (First char = [0x00A8, dieresis], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00A9, -2 },  // (First char = [0x00A9, copyright], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00AC, -1 },  // (First char = [0x00AC, logicalnot], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00AE, -1 },  // (First char = [0x00AE, registered], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00AF, -1 },  // (First char = [0x00AF, macron], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00B0, -1 },  // (First char = [0x00B0, degree], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00B1, -1 },  // (First char = [0x00B1, plusminus], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00B4, -1 },  // (First char = [0x00B4, acute], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00B6, -1 },  // (First char = [0x00B6, paragraph], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00B7, -2 },  // (First char = [0x00B7, periodcentered], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00B8, -1 },  // (First char = [0x00B8, cedilla], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00BF, -3 },  // (First char = [0x00BF, questiondown], Second char = [0x00DD, Yacute], Kerning dist = -3)
    { 0x00C7, -1 },  // (First char = [0x00C7, Ccedilla], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00CC, -1 },  // (First char = [0x00CC, Igrave], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00CD, -1 },  // (First char = [0x00CD, Iacute], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00CE, -1 },  // (First char = [0x00CE, Icircumflex], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00CF, -1 },  // (First char = [0x00CF, Idieresis], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00D0, -2 },  // (First char = [0x00D0, Eth], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00D1, -1 },  // (First char = [0x00D1, Ntilde], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00D2, -2 },  // (First char = [0x00D2, Ograve], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00D3, -2 },  // (First char = [0x00D3, Oacute], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00D4, -2 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00D5, -2 },  // (First char = [0x00D5, Otilde], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00D6, -2 },  // (First char = [0x00D6, Odieresis], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00D7, -1 },  // (First char = [0x00D7, multiply], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00D8, -2 },  // (First char = [0x00D8, Oslash], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00DD,  1 },  // (First char = [0x00DD, Yacute], Second char = [0x00DD, Yacute], Kerning dist = 1)
    { 0x00DE, -1 },  // (First char = [0x00DE, Thorn], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x00E7, -2 },  // (First char = [0x00E7, ccedilla], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x00F0, -1 },  // (First char = [0x00F0, eth], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x2022, -1 },  // (First char = [0x2022, bullet], Second char = [0x00DD, Yacute], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00DF, germandbls], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00DF, germandbls], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00DF, germandbls], Kerning dist = -1)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E0, agrave], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E0, agrave], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E0, agrave], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E0, agrave], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E1, aacute], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E1, aacute], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E1, aacute], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E1, aacute], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E2, acircumflex], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E2, acircumflex], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E2, acircumflex], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E2, acircumflex], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E2, acircumflex], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E2, acircumflex], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E2, acircumflex], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E2, acircumflex], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E2, acircumflex], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E2, acircumflex], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E2, acircumflex], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E3, atilde], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E3, atilde], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E3, atilde], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E3, atilde], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E3, atilde], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E3, atilde], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E3, atilde], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E3, atilde], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E3, atilde], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E3, atilde], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E3, atilde], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E4, adieresis], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E4, adieresis], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E4, adieresis], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E4, adieresis], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E4, adieresis], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E4, adieresis], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E4, adieresis], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E4, adieresis], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E4, adieresis], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E4, adieresis], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E4, adieresis], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E5, aring], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E5, aring], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E5, aring], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E5, aring], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E5, aring], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E5, aring], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E5, aring], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E5, aring], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E5, aring], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E5, aring], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E5, aring], Kerning dist = -2)
    { 0x0022, -2 },  // (First char = [0x0022, quotedbl], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0027, -2 },  // (First char = [0x0027, quotesingle], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E6, ae], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E6, ae], Kerning dist = -3)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E6, ae], Kerning dist = -3)
    { 0x201D, -2 },  // (First char = [0x201D, quotedblright], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E7, ccedilla], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E7, ccedilla], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E7, ccedilla], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E7, ccedilla], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E7, ccedilla], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E8, egrave], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E8, egrave], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E8, egrave], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E8, egrave], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E8, egrave], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E9, eacute], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E9, eacute], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00E9, eacute], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00E9, eacute], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00E9, eacute], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00EA, ecircumflex], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00EA, ecircumflex], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00EA, ecircumflex], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00EA, ecircumflex], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00EA, ecircumflex], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00EB, edieresis], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00EB, edieresis], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00EB, edieresis], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00EB, edieresis], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00EB, edieresis], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00F1, ntilde], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F1, ntilde], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F1, ntilde], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00F1, ntilde], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F1, ntilde], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00F1, ntilde], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00F1, ntilde], Kerning dist = -2)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00F2, ograve], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00F2, ograve], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00F2, ograve], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00F2, ograve], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00F2, ograve], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00F3, oacute], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00F3, oacute], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00F3, oacute], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00F3, oacute], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00F3, oacute], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00F4, ocircumflex], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00F4, ocircumflex], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00F4, ocircumflex], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00F4, ocircumflex], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00F4, ocircumflex], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00F5, otilde], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00F5, otilde], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00F5, otilde], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00F5, otilde], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00F5, otilde], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00F6, odieresis], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00F6, odieresis], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00F6, odieresis], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00F6, odieresis], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00F6, odieresis], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x00F7, divide], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00F8, oslash], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00F8, oslash], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00F8, oslash], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00F8, oslash], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x00DD, -3 },  // (First char = [0x00DD, Yacute], Second char = [0x00F8, oslash], Kerning dist = -3)
    { 0x201D, -1 },  // (First char = [0x201D, quotedblright], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F9, ugrave], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00F9, ugrave], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00F9, ugrave], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00FA, uacute], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00FA, uacute], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00FA, uacute], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00FB, ucircumflex], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00FB, ucircumflex], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00FB, ucircumflex], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00FC, udieresis], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00FC, udieresis], Kerning dist = -2)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x00FC, udieresis], Kerning dist = -2)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00FD, yacute], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x00FD, yacute], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x00FD, yacute], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x00FD, yacute], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x00FD, yacute], Kerning dist = 1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00C6, -1 },  // (First char = [0x00C6, AE], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00C8, -1 },  // (First char = [0x00C8, Egrave], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00C9, -1 },  // (First char = [0x00C9, Eacute], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00CA, -1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00CB, -1 },  // (First char = [0x00CB, Edieresis], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x00FD, yacute], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x00FD, yacute], Kerning dist = 1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00FF, ydieresis], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x005C, -1 },  // (First char = [0x005C, backslash], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x00FF, ydieresis], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x00FF, ydieresis], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x00FF, ydieresis], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x00FF, ydieresis], Kerning dist = 1)
    { 0x00BF, -1 },  // (First char = [0x00BF, questiondown], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00C6, -1 },  // (First char = [0x00C6, AE], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00C8, -1 },  // (First char = [0x00C8, Egrave], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00C9, -1 },  // (First char = [0x00C9, Eacute], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00CA, -1 },  // (First char = [0x00CA, Ecircumflex], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00CB, -1 },  // (First char = [0x00CB, Edieresis], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x00FF, ydieresis], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x00FF, ydieresis], Kerning dist = 1)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x201D, quotedblright], Kerning dist = -2)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x0076,  1 },  // (First char = [0x0076, v], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x0079,  1 },  // (First char = [0x0079, y], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x00FD,  1 },  // (First char = [0x00FD, yacute], Second char = [0x201D, quotedblright], Kerning dist = 1)
    { 0x00FF,  1 },  // (First char = [0x00FF, ydieresis], Second char = [0x201D, quotedblright], Kerning dist = 1)
};
