/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/thinking_circles_containerBase.hpp>
#include <touchgfx/Color.hpp>

thinking_circles_containerBase::thinking_circles_containerBase() :
    frameCountInteraction1Interval(0)
{
    setWidth(130);
    setHeight(30);
    circle1_small.setPosition(5, 5, 20, 20);
    circle1_small.setCenter(10, 10);
    circle1_small.setRadius(10);
    circle1_small.setLineWidth(0);
    circle1_small.setArc(0, 360);
    circle1_smallPainter.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    circle1_small.setPainter(circle1_smallPainter);
    add(circle1_small);

    circle2_small.setPosition(55, 5, 20, 20);
    circle2_small.setCenter(10, 10);
    circle2_small.setRadius(10);
    circle2_small.setLineWidth(0);
    circle2_small.setArc(0, 360);
    circle2_smallPainter.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    circle2_small.setPainter(circle2_smallPainter);
    add(circle2_small);

    circle3_small.setPosition(105, 5, 20, 20);
    circle3_small.setCenter(10, 10);
    circle3_small.setRadius(10);
    circle3_small.setLineWidth(0);
    circle3_small.setArc(0, 360);
    circle3_smallPainter.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    circle3_small.setPainter(circle3_smallPainter);
    add(circle3_small);

    circle1_big.setPosition(0, 0, 30, 30);
    circle1_big.setCenter(15, 15);
    circle1_big.setRadius(15);
    circle1_big.setLineWidth(0);
    circle1_big.setArc(0, 360);
    circle1_bigPainter.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    circle1_big.setPainter(circle1_bigPainter);
    circle1_big.setVisible(false);
    add(circle1_big);

    circle2_big.setPosition(50, 0, 30, 30);
    circle2_big.setCenter(15, 15);
    circle2_big.setRadius(15);
    circle2_big.setLineWidth(0);
    circle2_big.setArc(0, 360);
    circle2_bigPainter.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    circle2_big.setPainter(circle2_bigPainter);
    circle2_big.setVisible(false);
    add(circle2_big);

    circle3_big.setPosition(100, 0, 30, 30);
    circle3_big.setCenter(15, 15);
    circle3_big.setRadius(15);
    circle3_big.setLineWidth(0);
    circle3_big.setArc(0, 360);
    circle3_bigPainter.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    circle3_big.setPainter(circle3_bigPainter);
    circle3_big.setVisible(false);
    add(circle3_big);

touchgfx::Application::getInstance()->registerTimerWidget(this);
}

thinking_circles_containerBase::~thinking_circles_containerBase()
{
touchgfx::Application::getInstance()->unregisterTimerWidget(this);
}

void thinking_circles_containerBase::initialize()
{

}

void thinking_circles_containerBase::handleTickEvent()
{
    frameCountInteraction1Interval++;
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
    {
        //Interaction1
        //When every N tick execute C++ code
        //Execute C++ code
        if(circle1_big.isVisible() == true)
        {
        	circle1_big.setVisible(false);
        	circle2_big.setVisible(true);
        	circle3_big.setVisible(false);
        }
        else if(circle2_big.isVisible() == true)
        {
        	circle1_big.setVisible(false);
        	circle2_big.setVisible(false);
        	circle3_big.setVisible(true);
        }
        else
        {
        	circle1_big.setVisible(true);
        	circle2_big.setVisible(false);
        	circle3_big.setVisible(false);
        }
        
        circle1_big.invalidate();
        circle2_big.invalidate();
        circle3_big.invalidate();
        frameCountInteraction1Interval = 0;
    }
}
