/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/boxDiceBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

boxDiceBase::boxDiceBase() :
    flexButtonCallback(this, &boxDiceBase::flexButtonCallbackHandler)
{
    setWidth(64);
    setHeight(64);
    highlight.setPosition(0, 0, 64, 64);
    highlight.setVisible(false);
    boxh_1.setPosition(4, 0, 56, 64);
    boxh_1.setColor(touchgfx::Color::getColorFromRGB(64, 170, 151));
    highlight.add(boxh_1);

    boxh_2.setPosition(0, 4, 64, 56);
    boxh_2.setColor(touchgfx::Color::getColorFromRGB(64, 170, 151));
    highlight.add(boxh_2);

    circleh_1.setPosition(0, 0, 8, 8);
    circleh_1.setCenter(4, 4);
    circleh_1.setRadius(4);
    circleh_1.setLineWidth(0);
    circleh_1.setArc(0, 360);
    circleh_1Painter.setColor(touchgfx::Color::getColorFromRGB(64, 170, 151));
    circleh_1.setPainter(circleh_1Painter);
    highlight.add(circleh_1);

    circleh_2.setPosition(56, 0, 8, 8);
    circleh_2.setCenter(4, 4);
    circleh_2.setRadius(4);
    circleh_2.setLineWidth(0);
    circleh_2.setArc(0, 360);
    circleh_2Painter.setColor(touchgfx::Color::getColorFromRGB(64, 170, 151));
    circleh_2.setPainter(circleh_2Painter);
    highlight.add(circleh_2);

    circleh_3.setPosition(0, 56, 8, 8);
    circleh_3.setCenter(4, 4);
    circleh_3.setRadius(4);
    circleh_3.setLineWidth(0);
    circleh_3.setArc(0, 360);
    circleh_3Painter.setColor(touchgfx::Color::getColorFromRGB(64, 170, 151));
    circleh_3.setPainter(circleh_3Painter);
    highlight.add(circleh_3);

    circleh_4.setPosition(56, 56, 8, 8);
    circleh_4.setCenter(4, 4);
    circleh_4.setRadius(4);
    circleh_4.setLineWidth(0);
    circleh_4.setArc(0, 360);
    circleh_4Painter.setColor(touchgfx::Color::getColorFromRGB(64, 170, 151));
    circleh_4.setPainter(circleh_4Painter);
    highlight.add(circleh_4);

    add(highlight);

    box_1.setPosition(6, 2, 52, 60);
    box_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box_1);

    box_2.setPosition(2, 6, 60, 52);
    box_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box_2);

    circle_1.setPosition(2, 2, 8, 8);
    circle_1.setCenter(4, 4);
    circle_1.setRadius(4);
    circle_1.setLineWidth(0);
    circle_1.setArc(0, 360);
    circle_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_1.setPainter(circle_1Painter);
    add(circle_1);

    circle_2.setPosition(54, 2, 8, 8);
    circle_2.setCenter(4, 4);
    circle_2.setRadius(4);
    circle_2.setLineWidth(0);
    circle_2.setArc(0, 360);
    circle_2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_2.setPainter(circle_2Painter);
    add(circle_2);

    circle_3.setPosition(2, 54, 8, 8);
    circle_3.setCenter(4, 4);
    circle_3.setRadius(4);
    circle_3.setLineWidth(0);
    circle_3.setArc(0, 360);
    circle_3Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_3.setPainter(circle_3Painter);
    add(circle_3);

    circle_4.setPosition(54, 54, 8, 8);
    circle_4.setCenter(4, 4);
    circle_4.setRadius(4);
    circle_4.setLineWidth(0);
    circle_4.setArc(0, 360);
    circle_4Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_4.setPainter(circle_4Painter);
    add(circle_4);

    text_dice.setPosition(2, 14, 60, 36);
    text_dice.setColor(touchgfx::Color::getColorFromRGB(182, 182, 182));
    text_dice.setLinespacing(0);
    Unicode::snprintf(text_diceBuffer, TEXT_DICE_SIZE, "%s", touchgfx::TypedText(T_CONTAINER_BOX_DICE_VALUE).getText());
    text_dice.setWildcard(text_diceBuffer);
    text_dice.setTypedText(touchgfx::TypedText(T_CONTAINER_BOX_DICE));
    text_dice.setVisible(false);
    add(text_dice);

    btn_dice.setBoxWithBorderPosition(0, 0, 60, 60);
    btn_dice.setBorderSize(5);
    btn_dice.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_dice.setAlpha(0);
    btn_dice.setAction(flexButtonCallback);
    btn_dice.setPosition(2, 2, 60, 60);
    add(btn_dice);
}

boxDiceBase::~boxDiceBase()
{

}

void boxDiceBase::initialize()
{

}

void boxDiceBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_dice)
    {
        //btnDicePressed
        //When btn_dice clicked call virtual function
        //Call btnDicePressed
        btnDicePressed();
    }
}
