/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_flow_wallet_screen/screen_flow_walletViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

screen_flow_walletViewBase::screen_flow_walletViewBase() :
    flexButtonCallback(this, &screen_flow_walletViewBase::flexButtonCallbackHandler),
    frameCountTickEventInterval(0)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(237, 237, 237));
    add(background);

    s0_infoWallet.setPosition(0, 0, 320, 240);
    btn_info_wallet.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_info_wallet.setBorderSize(0);
    btn_info_wallet.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_info_wallet.setText(TypedText(T_SW_BTN_INFO_WALLET));
    btn_info_wallet.setTextPosition(0, 5, 320, 30);
    btn_info_wallet.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_info_wallet.setAction(flexButtonCallback);
    btn_info_wallet.setPosition(0, 210, 320, 30);
    s0_infoWallet.add(btn_info_wallet);

    text_info_wallet_1.setPosition(0, 16, 320, 20);
    text_info_wallet_1.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_info_wallet_1.setLinespacing(0);
    text_info_wallet_1.setTypedText(touchgfx::TypedText(T_SW_TEXT_INFO_WALLET_1));
    s0_infoWallet.add(text_info_wallet_1);

    text_info_wallet_2.setPosition(0, 70, 320, 100);
    text_info_wallet_2.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_info_wallet_2.setLinespacing(0);
    text_info_wallet_2.setTypedText(touchgfx::TypedText(T_SW_TEXT_INFO_WALLET_2));
    s0_infoWallet.add(text_info_wallet_2);

    add(s0_infoWallet);

    s1_selectDice.setPosition(0, 0, 320, 240);
    s1_selectDice.setVisible(false);
    btn_dice_selected.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_dice_selected.setBorderSize(0);
    btn_dice_selected.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_dice_selected.setText(TypedText(T_SW_BTN_DICE_SELECTED));
    btn_dice_selected.setTextPosition(0, 5, 320, 30);
    btn_dice_selected.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_dice_selected.setAction(flexButtonCallback);
    btn_dice_selected.setPosition(0, 210, 320, 30);
    s1_selectDice.add(btn_dice_selected);

    box_dice_1.setXY(23, 40);
    s1_selectDice.add(box_dice_1);

    box_dice_2.setXY(93, 40);
    s1_selectDice.add(box_dice_2);

    box_dice_3.setXY(163, 40);
    s1_selectDice.add(box_dice_3);

    box_dice_4.setXY(233, 40);
    s1_selectDice.add(box_dice_4);

    box_dice_5.setXY(23, 120);
    s1_selectDice.add(box_dice_5);

    box_dice_6.setXY(93, 120);
    s1_selectDice.add(box_dice_6);

    box_dice_7.setXY(163, 120);
    s1_selectDice.add(box_dice_7);

    box_dice_8.setXY(233, 120);
    s1_selectDice.add(box_dice_8);

    text_dice_1.setPosition(25, 100, 60, 20);
    text_dice_1.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_1.setLinespacing(0);
    text_dice_1.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_1));
    s1_selectDice.add(text_dice_1);

    text_dice_2.setPosition(95, 100, 60, 20);
    text_dice_2.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_2.setLinespacing(0);
    text_dice_2.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_2));
    s1_selectDice.add(text_dice_2);

    text_dice_3.setPosition(165, 100, 60, 20);
    text_dice_3.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_3.setLinespacing(0);
    text_dice_3.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_3));
    s1_selectDice.add(text_dice_3);

    text_dice_4.setPosition(235, 100, 60, 20);
    text_dice_4.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_4.setLinespacing(0);
    text_dice_4.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_4));
    s1_selectDice.add(text_dice_4);

    text_dice_5.setPosition(25, 180, 60, 20);
    text_dice_5.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_5.setLinespacing(0);
    text_dice_5.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_5));
    s1_selectDice.add(text_dice_5);

    text_dice_6.setPosition(95, 180, 60, 20);
    text_dice_6.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_6.setLinespacing(0);
    text_dice_6.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_6));
    s1_selectDice.add(text_dice_6);

    text_dice_7.setPosition(165, 180, 60, 20);
    text_dice_7.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_7.setLinespacing(0);
    text_dice_7.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_7));
    s1_selectDice.add(text_dice_7);

    text_dice_8.setPosition(235, 180, 60, 20);
    text_dice_8.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_8.setLinespacing(0);
    text_dice_8.setTypedText(touchgfx::TypedText(T_SW_TEXT_DICE_8));
    s1_selectDice.add(text_dice_8);

    text_dice_select_info.setPosition(0, 7, 320, 20);
    text_dice_select_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_dice_select_info.setLinespacing(0);
    text_dice_select_info.setTypedText(touchgfx::TypedText(T_SW_DICE_SELECT_INFO));
    s1_selectDice.add(text_dice_select_info);

    add(s1_selectDice);

    s2_getWords.setPosition(0, 0, 320, 240);
    s2_getWords.setVisible(false);
    btn_get_words_selected.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_get_words_selected.setBorderSize(0);
    btn_get_words_selected.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_get_words_selected.setText(TypedText(T_SW_BTN_GET_WORDS_SELECTED));
    btn_get_words_selected.setTextPosition(0, 5, 320, 30);
    btn_get_words_selected.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_get_words_selected.setAlpha(100);
    btn_get_words_selected.setAction(flexButtonCallback);
    btn_get_words_selected.setPosition(0, 210, 320, 30);
    s2_getWords.add(btn_get_words_selected);

    text_get_words_info.setPosition(0, 7, 320, 20);
    text_get_words_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_get_words_info.setLinespacing(0);
    Unicode::snprintf(text_get_words_infoBuffer, TEXT_GET_WORDS_INFO_SIZE, "%s", touchgfx::TypedText(T_SW_GET_WORDS_INFO_VALUE).getText());
    text_get_words_info.setWildcard(text_get_words_infoBuffer);
    text_get_words_info.setTypedText(touchgfx::TypedText(T_SW_GET_WORDS_INFO));
    s2_getWords.add(text_get_words_info);

    heads_or_tails.setPosition(0, 0, 320, 240);
    btn_heads.setBitmaps(Bitmap(BITMAP_BTC_HEADS_ID), Bitmap(BITMAP_BTC_HEADS_ID));
    btn_heads.setBitmapXY(0, 0);
    btn_heads.setText(TypedText(T_SW_HEADS_TEXT));
    btn_heads.setTextPosition(0, 80, 80, 100);
    btn_heads.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(63, 63, 81));
    btn_heads.setAlpha(100);
    btn_heads.setAction(flexButtonCallback);
    btn_heads.setPosition(60, 80, 80, 100);
    heads_or_tails.add(btn_heads);

    btn_tails.setBitmaps(Bitmap(BITMAP_BTC_TAILS_ID), Bitmap(BITMAP_BTC_TAILS_ID));
    btn_tails.setBitmapXY(0, 0);
    btn_tails.setText(TypedText(T_SW_TAILS_TEXT));
    btn_tails.setTextPosition(0, 80, 80, 100);
    btn_tails.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(63, 63, 81));
    btn_tails.setAlpha(100);
    btn_tails.setAction(flexButtonCallback);
    btn_tails.setPosition(180, 80, 80, 100);
    heads_or_tails.add(btn_tails);

    text_heads_or_tails_info.setPosition(0, 27, 320, 20);
    text_heads_or_tails_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_heads_or_tails_info.setLinespacing(0);
    text_heads_or_tails_info.setTypedText(touchgfx::TypedText(T_SW_HEADS_OR_TAILS_INFO));
    heads_or_tails.add(text_heads_or_tails_info);

    s2_getWords.add(heads_or_tails);

    dice_roll.setPosition(0, 0, 320, 240);
    dice_roll.setVisible(false);
    box_dice_check.setPosition(23, 56, 274, 64);
    box_dice_sel_1.setXY(0, 0);
    box_dice_check.add(box_dice_sel_1);

    box_dice_sel_2.setXY(70, 0);
    box_dice_check.add(box_dice_sel_2);

    box_dice_sel_3.setXY(140, 0);
    box_dice_check.add(box_dice_sel_3);

    box_dice_sel_4.setXY(210, 0);
    box_dice_check.add(box_dice_sel_4);

    btn_dice_1.setBoxWithBorderPosition(0, 0, 64, 64);
    btn_dice_1.setBorderSize(0);
    btn_dice_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_dice_1.setAlpha(0);
    btn_dice_1.setAction(flexButtonCallback);
    btn_dice_1.setPosition(0, 0, 64, 64);
    box_dice_check.add(btn_dice_1);

    btn_dice_2.setBoxWithBorderPosition(0, 0, 64, 64);
    btn_dice_2.setBorderSize(0);
    btn_dice_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_dice_2.setAlpha(0);
    btn_dice_2.setAction(flexButtonCallback);
    btn_dice_2.setPosition(70, 0, 64, 64);
    box_dice_check.add(btn_dice_2);

    btn_dice_3.setBoxWithBorderPosition(0, 0, 64, 64);
    btn_dice_3.setBorderSize(0);
    btn_dice_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_dice_3.setAlpha(0);
    btn_dice_3.setAction(flexButtonCallback);
    btn_dice_3.setPosition(140, 0, 64, 64);
    box_dice_check.add(btn_dice_3);

    btn_dice_4.setBoxWithBorderPosition(0, 0, 64, 64);
    btn_dice_4.setBorderSize(0);
    btn_dice_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_dice_4.setAlpha(0);
    btn_dice_4.setAction(flexButtonCallback);
    btn_dice_4.setPosition(210, 0, 64, 64);
    box_dice_check.add(btn_dice_4);

    dice_roll.add(box_dice_check);

    text_word.setPosition(0, 150, 320, 20);
    text_word.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_word.setLinespacing(0);
    Unicode::snprintf(text_wordBuffer, TEXT_WORD_SIZE, "%s", touchgfx::TypedText(T_SW_WORD_VALUE).getText());
    text_word.setWildcard(text_wordBuffer);
    text_word.setTypedText(touchgfx::TypedText(T_SW_WORD));
    text_word.setVisible(false);
    dice_roll.add(text_word);

    text_word_error.setPosition(0, 140, 320, 40);
    text_word_error.setColor(touchgfx::Color::getColorFromRGB(231, 68, 62));
    text_word_error.setLinespacing(0);
    text_word_error.setTypedText(touchgfx::TypedText(T_SW_WORD_ERROR));
    text_word_error.setVisible(false);
    dice_roll.add(text_word_error);

    keyboard1.setXY(0, 148);
    keyboard1.setVisible(false);
    dice_roll.add(keyboard1);

    keyboard1_btn_hide.setIconBitmaps(Bitmap(BITMAP_KEYBOARDNUM_HIDE_2_RELEASED_ID), Bitmap(BITMAP_KEYBOARDNUM_HIDE_2_PRESSED_ID));
    keyboard1_btn_hide.setIconXY(0, 0);
    keyboard1_btn_hide.setVisible(false);
    keyboard1_btn_hide.setAction(flexButtonCallback);
    keyboard1_btn_hide.setPosition(3, 208, 313, 27);
    dice_roll.add(keyboard1_btn_hide);

    s2_getWords.add(dice_roll);

    word24.setPosition(0, 0, 320, 240);
    word24.setVisible(false);
    text_word_24.setPosition(0, 104, 320, 32);
    text_word_24.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_word_24.setLinespacing(0);
    Unicode::snprintf(text_word_24Buffer, TEXT_WORD_24_SIZE, "%s", touchgfx::TypedText(T_SW_WORD24_VALUE).getText());
    text_word_24.setWildcard(text_word_24Buffer);
    text_word_24.setTypedText(touchgfx::TypedText(T_SW_WORD24));
    word24.add(text_word_24);

    s2_getWords.add(word24);

    add(s2_getWords);

    s3_typePassprhase.setPosition(0, 0, 320, 240);
    s3_typePassprhase.setVisible(false);
    keyboard2.setXY(0, 117);
    keyboard2.setVisible(false);
    s3_typePassprhase.add(keyboard2);

    keyboard2_btn_hide.setIconBitmaps(Bitmap(BITMAP___KEYBOARDALPHANUM_HIDE_RELEASED_ID), Bitmap(BITMAP___KEYBOARDALPHANUM_HIDE_PRESSED_ID));
    keyboard2_btn_hide.setIconXY(0, 0);
    keyboard2_btn_hide.setVisible(false);
    keyboard2_btn_hide.setAction(flexButtonCallback);
    keyboard2_btn_hide.setPosition(235, 211, 80, 27);
    s3_typePassprhase.add(keyboard2_btn_hide);

    keyboard2_text_area.setPosition(20, 40, 280, 160);
    keyboard2_text_area.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    s3_typePassprhase.add(keyboard2_text_area);

    keyboard2_btn_show.setBoxWithBorderPosition(0, 0, 240, 160);
    keyboard2_btn_show.setBorderSize(5);
    keyboard2_btn_show.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    keyboard2_btn_show.setAlpha(0);
    keyboard2_btn_show.setAction(flexButtonCallback);
    keyboard2_btn_show.setPosition(60, 40, 240, 160);
    s3_typePassprhase.add(keyboard2_btn_show);

    keyboard2_btn_enter.setBoxWithBorderPosition(0, 0, 320, 30);
    keyboard2_btn_enter.setBorderSize(0);
    keyboard2_btn_enter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    keyboard2_btn_enter.setText(TypedText(T_SW_KEYBOARD2_BTN_ENTER));
    keyboard2_btn_enter.setTextPosition(0, 5, 320, 30);
    keyboard2_btn_enter.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    keyboard2_btn_enter.setAction(flexButtonCallback);
    keyboard2_btn_enter.setPosition(0, 210, 320, 30);
    s3_typePassprhase.add(keyboard2_btn_enter);

    keyboard2_text_typed.setPosition(60, 50, 230, 150);
    keyboard2_text_typed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    keyboard2_text_typed.setLinespacing(0);
    Unicode::snprintf(keyboard2_text_typedBuffer, KEYBOARD2_TEXT_TYPED_SIZE, "%s", touchgfx::TypedText(T_SW_KEYBOARD2_TYPED_VALUE).getText());
    keyboard2_text_typed.setWildcard(keyboard2_text_typedBuffer);
    keyboard2_text_typed.setTypedText(touchgfx::TypedText(T_SW_KEYBOARD2_TYPED));
    s3_typePassprhase.add(keyboard2_text_typed);

    keyboard2_text_info_1.setPosition(0, 0, 320, 20);
    keyboard2_text_info_1.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    keyboard2_text_info_1.setLinespacing(0);
    keyboard2_text_info_1.setTypedText(touchgfx::TypedText(T_SW_KEYBOARD2_INFO_1));
    s3_typePassprhase.add(keyboard2_text_info_1);

    keyboard2_text_info_2.setPosition(0, 20, 320, 20);
    keyboard2_text_info_2.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    keyboard2_text_info_2.setLinespacing(0);
    keyboard2_text_info_2.setTypedText(touchgfx::TypedText(T_SW_KEYBOARD2_INFO_2));
    s3_typePassprhase.add(keyboard2_text_info_2);

    keyboard2_btn_up.setIconBitmaps(Bitmap(BITMAP_ARROW_UP_ID), Bitmap(BITMAP_ARROW_UP_ID));
    keyboard2_btn_up.setIconXY(0, 0);
    keyboard2_btn_up.setAction(flexButtonCallback);
    keyboard2_btn_up.setPosition(30, 50, 20, 20);
    s3_typePassprhase.add(keyboard2_btn_up);

    keyboard2_btn_down.setIconBitmaps(Bitmap(BITMAP_ARROW_DOWN_ID), Bitmap(BITMAP_ARROW_DOWN_ID));
    keyboard2_btn_down.setIconXY(0, 0);
    keyboard2_btn_down.setAction(flexButtonCallback);
    keyboard2_btn_down.setPosition(30, 170, 20, 20);
    s3_typePassprhase.add(keyboard2_btn_down);

    keyboard2_char_count.setPosition(250, 188, 50, 12);
    keyboard2_char_count.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    keyboard2_char_count.setLinespacing(0);
    Unicode::snprintf(keyboard2_char_countBuffer, KEYBOARD2_CHAR_COUNT_SIZE, "%s", touchgfx::TypedText(T_SW_KEYBOARD2_CHAR_COUNT_VALUE).getText());
    keyboard2_char_count.setWildcard(keyboard2_char_countBuffer);
    keyboard2_char_count.setTypedText(touchgfx::TypedText(T_SW_KEYBOARD2_CHAR_COUNT));
    keyboard2_char_count.setAlpha(200);
    s3_typePassprhase.add(keyboard2_char_count);

    add(s3_typePassprhase);

    s4_walletSuccess.setPosition(0, 0, 320, 240);
    s4_walletSuccess.setVisible(false);
    btn_encrypt_info.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_encrypt_info.setBorderSize(0);
    btn_encrypt_info.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_encrypt_info.setText(TypedText(T_SW_BTN_ENCRYPT_INFO));
    btn_encrypt_info.setTextPosition(0, 5, 320, 30);
    btn_encrypt_info.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_encrypt_info.setAction(flexButtonCallback);
    btn_encrypt_info.setPosition(0, 210, 320, 30);
    s4_walletSuccess.add(btn_encrypt_info);

    btn_scroll_down_info.setDelay(30);
    btn_scroll_down_info.setInterval(6);
    btn_scroll_down_info.setIconBitmaps(Bitmap(BITMAP_ARROW_DOWN_ID), Bitmap(BITMAP_ARROW_DOWN_ID));
    btn_scroll_down_info.setIconXY(5, 5);
    btn_scroll_down_info.setAction(flexButtonCallback);
    btn_scroll_down_info.setPosition(15, 130, 30, 30);
    s4_walletSuccess.add(btn_scroll_down_info);

    btn_scroll_up_info.setDelay(30);
    btn_scroll_up_info.setInterval(6);
    btn_scroll_up_info.setIconBitmaps(Bitmap(BITMAP_ARROW_UP_ID), Bitmap(BITMAP_ARROW_UP_ID));
    btn_scroll_up_info.setIconXY(5, 5);
    btn_scroll_up_info.setAction(flexButtonCallback);
    btn_scroll_up_info.setPosition(15, 60, 30, 30);
    s4_walletSuccess.add(btn_scroll_up_info);

    scrollable_container_typed_check_info.setPosition(60, 50, 210, 120);
    scrollable_container_typed_check_info.enableHorizontalScroll(false);
    scrollable_container_typed_check_info.setScrollbarsColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    scrollable_container_typed_check_info.setScrollbarsAlpha(255);
    scrollable_container_typed_check_info.setScrollbarsVisible(false);
    typed_check_info.setPosition(0, 0, 210, 120);
    typed_check_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    typed_check_info.setLinespacing(0);
    Unicode::snprintf(typed_check_infoBuffer, TYPED_CHECK_INFO_SIZE, "%s", touchgfx::TypedText(T_SW_TYPED_CHECK_INFO_VALUE).getText());
    typed_check_info.setWildcard(typed_check_infoBuffer);
    typed_check_info.setTypedText(touchgfx::TypedText(T_SW_TYPED_CHECK_INFO));
    scrollable_container_typed_check_info.add(typed_check_info);

    s4_walletSuccess.add(scrollable_container_typed_check_info);

    add(s4_walletSuccess);

    s5_walletError.setPosition(0, 0, 320, 240);
    s5_walletError.setVisible(false);
    btn_restart.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_restart.setBorderSize(0);
    btn_restart.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_restart.setText(TypedText(T_SW_BTN_RESTART));
    btn_restart.setTextPosition(0, 5, 320, 30);
    btn_restart.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_restart.setAction(flexButtonCallback);
    btn_restart.setPosition(0, 210, 320, 30);
    s5_walletError.add(btn_restart);

    text_error.setPosition(0, 130, 320, 60);
    text_error.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_error.setLinespacing(0);
    text_error.setTypedText(touchgfx::TypedText(T_SW_WALLET_ERROR));
    s5_walletError.add(text_error);

    image_error.setXY(117, 44);
    image_error.setBitmap(touchgfx::Bitmap(BITMAP_GRAFISMO_ERROR_CUVEX_ID));
    s5_walletError.add(image_error);

    add(s5_walletError);

    close_button.setXY(0, 0);
    add(close_button);
}

screen_flow_walletViewBase::~screen_flow_walletViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void screen_flow_walletViewBase::setupScreen()
{
    box_dice_1.initialize();
    box_dice_2.initialize();
    box_dice_3.initialize();
    box_dice_4.initialize();
    box_dice_5.initialize();
    box_dice_6.initialize();
    box_dice_7.initialize();
    box_dice_8.initialize();
    box_dice_sel_1.initialize();
    box_dice_sel_2.initialize();
    box_dice_sel_3.initialize();
    box_dice_sel_4.initialize();
    keyboard1.initialize();
    keyboard2.initialize();
    close_button.initialize();
}

void screen_flow_walletViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_dice_selected)
    {
        //btnDiceSelectPressed
        //When btn_dice_selected clicked call virtual function
        //Call btnDiceSelectPressed
        btnDiceSelectPressed();
    }
    if (&src == &btn_get_words_selected)
    {
        //btnGetWordsPressed
        //When btn_get_words_selected clicked call virtual function
        //Call btnGetWordsPressed
        btnGetWordsPressed();
    }
    if (&src == &btn_heads)
    {
        //btnHeadsPressed
        //When btn_heads clicked call virtual function
        //Call btnHeadsPressed
        btnHeadsPressed();
    }
    if (&src == &btn_tails)
    {
        //btnTailsPressed
        //When btn_tails clicked call virtual function
        //Call btnTailsPressed
        btnTailsPressed();
    }
    if (&src == &keyboard1_btn_hide)
    {
        //hideKeyboard1Pressed
        //When keyboard1_btn_hide clicked call virtual function
        //Call hideKeyboard1Pressed
        hideKeyboard1Pressed();
    }
    if (&src == &btn_dice_1)
    {
        //showKeyboard1Dice1Pressed
        //When btn_dice_1 clicked call virtual function
        //Call showKeyboard1Dice1Pressed
        showKeyboard1Dice1Pressed();
    }
    if (&src == &btn_dice_2)
    {
        //showKeyboard1Dice2Pressed
        //When btn_dice_2 clicked call virtual function
        //Call showKeyboard1Dice2Pressed
        showKeyboard1Dice2Pressed();
    }
    if (&src == &btn_dice_3)
    {
        //showKeyboard1Dice3Pressed
        //When btn_dice_3 clicked call virtual function
        //Call showKeyboard1Dice3Pressed
        showKeyboard1Dice3Pressed();
    }
    if (&src == &btn_dice_4)
    {
        //showKeyboard1Dice4Pressed
        //When btn_dice_4 clicked call virtual function
        //Call showKeyboard1Dice4Pressed
        showKeyboard1Dice4Pressed();
    }
    if (&src == &keyboard2_btn_hide)
    {
        //hideKeyboard2Pressed
        //When keyboard2_btn_hide clicked call virtual function
        //Call hideKeyboard2Pressed
        hideKeyboard2Pressed();
    }
    if (&src == &keyboard2_btn_show)
    {
        //showKeyboard2Pressed
        //When keyboard2_btn_show clicked call virtual function
        //Call showKeyboard2Pressed
        showKeyboard2Pressed();
    }
    if (&src == &keyboard2_btn_enter)
    {
        //enterKeyboard2Pressed
        //When keyboard2_btn_enter clicked call virtual function
        //Call enterKeyboard2Pressed
        enterKeyboard2Pressed();
    }
    if (&src == &keyboard2_btn_up)
    {
        //btnUpPassphrasePressed
        //When keyboard2_btn_up clicked call virtual function
        //Call btnUpPassphrasePressed
        btnUpPassphrasePressed();
    }
    if (&src == &keyboard2_btn_down)
    {
        //btnDownPassphrasePressed
        //When keyboard2_btn_down clicked call virtual function
        //Call btnDownPassphrasePressed
        btnDownPassphrasePressed();
    }
    if (&src == &btn_scroll_up_info)
    {
        //btnScrollUpPressed
        //When btn_scroll_up_info clicked call virtual function
        //Call btnScrollUpPressed
        btnScrollUpPressed();
    }
    if (&src == &btn_scroll_down_info)
    {
        //btnScrollDownPressed
        //When btn_scroll_down_info clicked call virtual function
        //Call btnScrollDownPressed
        btnScrollDownPressed();
    }
    if (&src == &btn_encrypt_info)
    {
        //btnEncryptPressed
        //When btn_encrypt_info clicked call virtual function
        //Call btnEncryptPressed
        btnEncryptPressed();
    }
    if (&src == &btn_info_wallet)
    {
        //btnInfoWalletPressed
        //When btn_info_wallet clicked call virtual function
        //Call btnInfoWalletPressed
        btnInfoWalletPressed();
    }
    if (&src == &btn_restart)
    {
        //btnRestartPressed
        //When btn_restart clicked call virtual function
        //Call btnRestartPressed
        btnRestartPressed();
    }
}

void screen_flow_walletViewBase::handleTickEvent()
{
    frameCountTickEventInterval++;
    if(frameCountTickEventInterval == TICK_TICKEVENT_INTERVAL)
    {
        //tickEvent
        //When every N tick call virtual function
        //Call tickEventScreen
        tickEventScreen();
        frameCountTickEventInterval = 0;
    }
}
