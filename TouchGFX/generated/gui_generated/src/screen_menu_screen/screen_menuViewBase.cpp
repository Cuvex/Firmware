/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_menu_screen/screen_menuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen_menuViewBase::screen_menuViewBase() :
    flexButtonCallback(this, &screen_menuViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(237, 237, 237));
    add(background);

    menu.setPosition(0, 0, 320, 240);
    btn_encrypt.setBoxWithBorderPosition(0, 0, 100, 100);
    btn_encrypt.setBorderSize(0);
    btn_encrypt.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(229, 229, 229), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    btn_encrypt.setIconBitmaps(Bitmap(BITMAP_MAIN_MENU_ENCRYPT_ID), Bitmap(BITMAP_MAIN_MENU_ENCRYPT_ID));
    btn_encrypt.setIconXY(30, 19);
    btn_encrypt.setText(TypedText(T_SM_BTN_ENCRYPT));
    btn_encrypt.setTextPosition(0, 67, 100, 100);
    btn_encrypt.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_encrypt.setAction(flexButtonCallback);
    btn_encrypt.setPosition(6, 18, 100, 100);
    menu.add(btn_encrypt);

    btn_decrypt.setBoxWithBorderPosition(0, 0, 100, 100);
    btn_decrypt.setBorderSize(0);
    btn_decrypt.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(229, 229, 229), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    btn_decrypt.setIconBitmaps(Bitmap(BITMAP_MAIN_MENU_DECRYPT_ID), Bitmap(BITMAP_MAIN_MENU_DECRYPT_ID));
    btn_decrypt.setIconXY(30, 19);
    btn_decrypt.setText(TypedText(T_SM_BTN_DECRYPT));
    btn_decrypt.setTextPosition(0, 67, 100, 100);
    btn_decrypt.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_decrypt.setAction(flexButtonCallback);
    btn_decrypt.setPosition(110, 18, 100, 100);
    menu.add(btn_decrypt);

    btn_clone.setBoxWithBorderPosition(0, 0, 100, 100);
    btn_clone.setBorderSize(0);
    btn_clone.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(229, 229, 229), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    btn_clone.setIconBitmaps(Bitmap(BITMAP_MAIN_MENU_CLONE_ID), Bitmap(BITMAP_MAIN_MENU_CLONE_ID));
    btn_clone.setIconXY(30, 19);
    btn_clone.setText(TypedText(T_SM_BTN_CLONE));
    btn_clone.setTextPosition(0, 67, 100, 100);
    btn_clone.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_clone.setAction(flexButtonCallback);
    btn_clone.setPosition(214, 18, 100, 100);
    menu.add(btn_clone);

    btn_wallet.setBoxWithBorderPosition(0, 0, 100, 100);
    btn_wallet.setBorderSize(0);
    btn_wallet.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(229, 229, 229), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    btn_wallet.setIconBitmaps(Bitmap(BITMAP_MAIN_MENU_WALLET_ID), Bitmap(BITMAP_MAIN_MENU_WALLET_ID));
    btn_wallet.setIconXY(30, 19);
    btn_wallet.setText(TypedText(T_SM_BTN_WALLET));
    btn_wallet.setTextPosition(0, 67, 100, 100);
    btn_wallet.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_wallet.setAction(flexButtonCallback);
    btn_wallet.setPosition(6, 122, 100, 100);
    menu.add(btn_wallet);

    btn_settings.setBoxWithBorderPosition(0, 0, 100, 100);
    btn_settings.setBorderSize(0);
    btn_settings.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(229, 229, 229), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    btn_settings.setIconBitmaps(Bitmap(BITMAP_MAIN_MENU_SETTINGS_ID), Bitmap(BITMAP_MAIN_MENU_SETTINGS_ID));
    btn_settings.setIconXY(30, 19);
    btn_settings.setText(TypedText(T_SM_BTN_SETTINGS));
    btn_settings.setTextPosition(0, 67, 100, 100);
    btn_settings.setTextColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_settings.setAction(flexButtonCallback);
    btn_settings.setPosition(110, 122, 100, 100);
    menu.add(btn_settings);

    add(menu);
}

screen_menuViewBase::~screen_menuViewBase()
{

}

void screen_menuViewBase::setupScreen()
{

}

void screen_menuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_encrypt)
    {
        //encryptButtonPressed
        //When btn_encrypt clicked change screen to screen_flow_encrypt
        //Go to screen_flow_encrypt with no screen transition
        application().gotoscreen_flow_encryptScreenNoTransition();
    }
    if (&src == &btn_decrypt)
    {
        //decryptButtonPressed
        //When btn_decrypt clicked change screen to screen_flow_decrypt
        //Go to screen_flow_decrypt with no screen transition
        application().gotoscreen_flow_decryptScreenNoTransition();
    }
    if (&src == &btn_clone)
    {
        //cloneButtonPressed
        //When btn_clone clicked change screen to screen_flow_clone
        //Go to screen_flow_clone with no screen transition
        application().gotoscreen_flow_cloneScreenNoTransition();
    }
    if (&src == &btn_wallet)
    {
        //walletButtonPressed
        //When btn_wallet clicked change screen to screen_flow_wallet
        //Go to screen_flow_wallet with no screen transition
        application().gotoscreen_flow_walletScreenNoTransition();
    }
    if (&src == &btn_settings)
    {
        //settingsButtonPressed
        //When btn_settings clicked change screen to screen_flow_settings
        //Go to screen_flow_settings with no screen transition
        application().gotoscreen_flow_settingsScreenNoTransition();
    }
}
