/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_flow_1_screen/screen_flow_1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

screen_flow_1ViewBase::screen_flow_1ViewBase() :
    frameCountInteraction1Interval(0),
    flexButtonCallback(this, &screen_flow_1ViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(237, 237, 237));
    add(background);

    s0_initNFC.setPosition(0, 0, 320, 240);
    init_nfc_thinking_circles.setXY(95, 170);
    s0_initNFC.add(init_nfc_thinking_circles);

    init_nfc_text1.setXY(110, 140);
    init_nfc_text1.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    init_nfc_text1.setLinespacing(0);
    init_nfc_text1.setTypedText(touchgfx::TypedText(T_SF1_INIT_NFC_TEXT1));
    s0_initNFC.add(init_nfc_text1);

    init_nfc_text2.setXY(178, 140);
    init_nfc_text2.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    init_nfc_text2.setLinespacing(0);
    init_nfc_text2.setTypedText(touchgfx::TypedText(T_SF1_INIT_NFC_TEXT2));
    s0_initNFC.add(init_nfc_text2);

    init_nfc_image.setXY(124, 44);
    init_nfc_image.setBitmap(touchgfx::Bitmap(BITMAP_GRAFISMO_ACTIVANDO_NFC_CUVEX_ID));
    s0_initNFC.add(init_nfc_image);

    add(s0_initNFC);

    s1_waitReadNFC.setPosition(0, 0, 320, 240);
    s1_waitReadNFC.setVisible(false);
    wait_read_nfc_text1.setPosition(0, 140, 320, 20);
    wait_read_nfc_text1.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    wait_read_nfc_text1.setLinespacing(0);
    wait_read_nfc_text1.setTypedText(touchgfx::TypedText(T_SF1_WAIT_READ_NFC_TEXT1));
    s1_waitReadNFC.add(wait_read_nfc_text1);

    wait_read_nfc_text2.setPosition(0, 160, 320, 20);
    wait_read_nfc_text2.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    wait_read_nfc_text2.setLinespacing(0);
    wait_read_nfc_text2.setTypedText(touchgfx::TypedText(T_SF1_WAIT_READ_NFC_TEXT2));
    s1_waitReadNFC.add(wait_read_nfc_text2);

    wait_read_nfc_image.setXY(112, 49);
    wait_read_nfc_image.setBitmap(touchgfx::Bitmap(BITMAP_GRAFISMO_NFC_CUVEX_ID));
    s1_waitReadNFC.add(wait_read_nfc_image);

    add(s1_waitReadNFC);

    s2_viewTagInfo.setPosition(0, 0, 320, 240);
    s2_viewTagInfo.setVisible(false);
    btn_assign_alias.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_assign_alias.setBorderSize(0);
    btn_assign_alias.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_assign_alias.setText(TypedText(T_SF1_BTN_ASSIGN_ALIAS));
    btn_assign_alias.setTextPosition(0, 5, 320, 30);
    btn_assign_alias.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_assign_alias.setAction(flexButtonCallback);
    btn_assign_alias.setPosition(0, 210, 320, 30);
    s2_viewTagInfo.add(btn_assign_alias);

    text_uid_info.setPosition(0, 100, 320, 20);
    text_uid_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_uid_info.setLinespacing(0);
    text_uid_info.setTypedText(touchgfx::TypedText(T_SF1_TEXT_UID_INFO));
    s2_viewTagInfo.add(text_uid_info);

    text_uid.setPosition(0, 120, 320, 20);
    text_uid.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_uid.setLinespacing(0);
    Unicode::snprintf(text_uidBuffer, TEXT_UID_SIZE, "%s", touchgfx::TypedText(T_SF1_TEXT_UID_VALUE).getText());
    text_uid.setWildcard(text_uidBuffer);
    text_uid.setTypedText(touchgfx::TypedText(T_SF1_TEXT_UID));
    s2_viewTagInfo.add(text_uid);

    text_alias_info.setPosition(0, 100, 320, 20);
    text_alias_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_alias_info.setLinespacing(0);
    text_alias_info.setTypedText(touchgfx::TypedText(T_SF1_TEXT_ALIAS_INFO));
    text_alias_info.setVisible(false);
    s2_viewTagInfo.add(text_alias_info);

    text_alias.setPosition(0, 120, 320, 20);
    text_alias.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    text_alias.setLinespacing(0);
    Unicode::snprintf(text_aliasBuffer, TEXT_ALIAS_SIZE, "%s", touchgfx::TypedText(T_SF1_TEXT_ALIAS_VALUE).getText());
    text_alias.setWildcard(text_aliasBuffer);
    text_alias.setTypedText(touchgfx::TypedText(T_SF1_TEXT_ALIAS));
    text_alias.setVisible(false);
    s2_viewTagInfo.add(text_alias);

    btn_back.setBoxWithBorderPosition(0, 0, 34, 34);
    btn_back.setBorderSize(0);
    btn_back.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    btn_back.setIconBitmaps(Bitmap(BITMAP_BACK_ID), Bitmap(BITMAP_BACK_DARK_ID));
    btn_back.setIconXY(9, 9);
    btn_back.setVisible(false);
    btn_back.setAction(flexButtonCallback);
    btn_back.setPosition(0, 0, 34, 34);
    s2_viewTagInfo.add(btn_back);

    container_qr_small_code.setPosition(0, 0, 320, 240);
    circle_qr_small.setPosition(15, 15, 50, 50);
    circle_qr_small.setCenter(25, 25);
    circle_qr_small.setRadius(33);
    circle_qr_small.setLineWidth(0);
    circle_qr_small.setArc(0, 360);
    circle_qr_smallPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_qr_small.setPainter(circle_qr_smallPainter);
    container_qr_small_code.add(circle_qr_small);

    text_qr_small.setPosition(15, 54, 50, 11);
    text_qr_small.setColor(touchgfx::Color::getColorFromRGB(64, 92, 160));
    text_qr_small.setLinespacing(0);
    text_qr_small.setTypedText(touchgfx::TypedText(T_SF1_TEXT_QR_SMALL));
    container_qr_small_code.add(text_qr_small);

    btn_qr_small.setIconBitmaps(Bitmap(BITMAP_QR_CODE_ID), Bitmap(BITMAP_QR_CODE_ID));
    btn_qr_small.setIconXY(9, 7);
    btn_qr_small.setAction(flexButtonCallback);
    btn_qr_small.setPosition(15, 15, 50, 50);
    container_qr_small_code.add(btn_qr_small);

    s2_viewTagInfo.add(container_qr_small_code);

    add(s2_viewTagInfo);

    s3_typeAlias.setPosition(0, 0, 320, 240);
    s3_typeAlias.setVisible(false);
    keyboard_alias.setXY(0, 117);
    keyboard_alias.setVisible(false);
    s3_typeAlias.add(keyboard_alias);

    keyboard_text_area.setXY(45, 120);
    s3_typeAlias.add(keyboard_text_area);

    keyboard_btn_hide.setIconBitmaps(Bitmap(BITMAP_KEYBOARDALPHANUM_HIDE_RELEASE_ID), Bitmap(BITMAP_KEYBOARDALPHANUM_HIDE_PRESSED_ID));
    keyboard_btn_hide.setIconXY(0, 0);
    keyboard_btn_hide.setVisible(false);
    keyboard_btn_hide.setAction(flexButtonCallback);
    keyboard_btn_hide.setPosition(242, 210, 75, 25);
    s3_typeAlias.add(keyboard_btn_hide);

    keyboard_btn_show.setBoxWithBorderPosition(0, 0, 169, 30);
    keyboard_btn_show.setBorderSize(5);
    keyboard_btn_show.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    keyboard_btn_show.setAlpha(0);
    keyboard_btn_show.setAction(flexButtonCallback);
    keyboard_btn_show.setPosition(76, 120, 169, 30);
    s3_typeAlias.add(keyboard_btn_show);

    keyboard_btn_enter.setIconBitmaps(Bitmap(BITMAP_GRAFISMO_BOTON_FLECHA_ACEPTAR_CUVEX_ID), Bitmap(BITMAP_GRAFISMO_BOTON_FLECHA_ACEPTAR_CUVEX_ID));
    keyboard_btn_enter.setIconXY(1, 1);
    keyboard_btn_enter.setAction(flexButtonCallback);
    keyboard_btn_enter.setPosition(245, 120, 30, 30);
    s3_typeAlias.add(keyboard_btn_enter);

    keyboard_text_typed.setPosition(76, 125, 169, 20);
    keyboard_text_typed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    keyboard_text_typed.setLinespacing(0);
    Unicode::snprintf(keyboard_text_typedBuffer, KEYBOARD_TEXT_TYPED_SIZE, "%s", touchgfx::TypedText(T_SF1_KEYBOARD_TYPED_VALUE).getText());
    keyboard_text_typed.setWildcard(keyboard_text_typedBuffer);
    keyboard_text_typed.setTypedText(touchgfx::TypedText(T_SF1_KEYBOARD_TYPED));
    s3_typeAlias.add(keyboard_text_typed);

    keyboard_text_info.setPosition(0, 90, 320, 20);
    keyboard_text_info.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    keyboard_text_info.setLinespacing(0);
    keyboard_text_info.setTypedText(touchgfx::TypedText(T_SF1_KEYBOARD_INFO));
    s3_typeAlias.add(keyboard_text_info);

    add(s3_typeAlias);

    s4_waitReadWriteNFC.setPosition(0, 0, 320, 240);
    s4_waitReadWriteNFC.setVisible(false);
    wait_read_write_nfc_text1.setPosition(0, 140, 320, 20);
    wait_read_write_nfc_text1.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    wait_read_write_nfc_text1.setLinespacing(0);
    wait_read_write_nfc_text1.setTypedText(touchgfx::TypedText(T_SF1_WAIT_READ_WRITE_NFC_TEXT1));
    s4_waitReadWriteNFC.add(wait_read_write_nfc_text1);

    wait_read_write_nfc_text2.setPosition(0, 160, 320, 20);
    wait_read_write_nfc_text2.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    wait_read_write_nfc_text2.setLinespacing(0);
    wait_read_write_nfc_text2.setTypedText(touchgfx::TypedText(T_SF1_WAIT_READ_WRITE_NFC_TEXT2));
    s4_waitReadWriteNFC.add(wait_read_write_nfc_text2);

    wait_read_write_nfc_image.setXY(112, 49);
    wait_read_write_nfc_image.setBitmap(touchgfx::Bitmap(BITMAP_GRAFISMO_NFC_CUVEX_ID));
    s4_waitReadWriteNFC.add(wait_read_write_nfc_image);

    add(s4_waitReadWriteNFC);

    s5_writeSuccess.setPosition(0, 0, 320, 240);
    s5_writeSuccess.setVisible(false);
    btn_accept_success.setBoxWithBorderPosition(0, 0, 320, 30);
    btn_accept_success.setBorderSize(0);
    btn_accept_success.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(63, 63, 81), touchgfx::Color::getColorFromRGB(64, 92, 160), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_accept_success.setText(TypedText(T_SF1_BTN_ACCEPT));
    btn_accept_success.setTextPosition(0, 5, 320, 30);
    btn_accept_success.setTextColors(touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(237, 237, 237));
    btn_accept_success.setAction(flexButtonCallback);
    btn_accept_success.setPosition(0, 210, 320, 30);
    s5_writeSuccess.add(btn_accept_success);

    write_success_text.setPosition(0, 140, 320, 20);
    write_success_text.setColor(touchgfx::Color::getColorFromRGB(63, 63, 81));
    write_success_text.setLinespacing(0);
    write_success_text.setTypedText(touchgfx::TypedText(T_SF1_WRITE_SUCCESS_NFC_TEXT));
    s5_writeSuccess.add(write_success_text);

    write_success_image.setXY(117, 44);
    write_success_image.setBitmap(touchgfx::Bitmap(BITMAP_GRAFISMO_PROCESO_EXITOSO_CUVEX_ID));
    s5_writeSuccess.add(write_success_image);

    add(s5_writeSuccess);

    close_button.setXY(0, 0);
    add(close_button);
}

screen_flow_1ViewBase::~screen_flow_1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void screen_flow_1ViewBase::setupScreen()
{
    init_nfc_thinking_circles.initialize();
    keyboard_alias.initialize();
    keyboard_text_area.initialize();
    close_button.initialize();
}

void screen_flow_1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_assign_alias)
    {
        //Interaction2
        //When btn_assign_alias clicked call virtual function
        //Call assignAliasPressed
        assignAliasPressed();
    }
    if (&src == &keyboard_btn_hide)
    {
        //Interaction3
        //When keyboard_btn_hide clicked call virtual function
        //Call hideKeyboardPressed
        hideKeyboardPressed();
    }
    if (&src == &keyboard_btn_show)
    {
        //Interaction4
        //When keyboard_btn_show clicked call virtual function
        //Call showKeyboardPressed
        showKeyboardPressed();
    }
    if (&src == &keyboard_btn_enter)
    {
        //Interaction5
        //When keyboard_btn_enter clicked call virtual function
        //Call enterKeyboardPressed
        enterKeyboardPressed();
    }
    if (&src == &btn_accept_success)
    {
        //Interaction6
        //When btn_accept_success clicked call virtual function
        //Call acceptSuccessPressed
        acceptSuccessPressed();
    }
    if (&src == &btn_qr_small)
    {
        //Interaction7
        //When btn_qr_small clicked call virtual function
        //Call qrSmallPressed
        qrSmallPressed();
    }
    if (&src == &btn_back)
    {
        //Interaction8
        //When btn_back clicked call virtual function
        //Call qrBackPressed
        qrBackPressed();
    }
}

void screen_flow_1ViewBase::handleTickEvent()
{
    frameCountInteraction1Interval++;
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
    {
        //Interaction1
        //When every N tick call virtual function
        //Call tickEventScreen
        tickEventScreen();
        frameCountInteraction1Interval = 0;
    }
}
