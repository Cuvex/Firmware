/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/screen_init_screen/screen_initView.hpp>
#include <gui/screen_init_screen/screen_initPresenter.hpp>
#include <gui/screen_menu_screen/screen_menuView.hpp>
#include <gui/screen_menu_screen/screen_menuPresenter.hpp>
#include <gui/screen_flow_encrypt_screen/screen_flow_encryptView.hpp>
#include <gui/screen_flow_encrypt_screen/screen_flow_encryptPresenter.hpp>
#include <gui/screen_flow_decrypt_screen/screen_flow_decryptView.hpp>
#include <gui/screen_flow_decrypt_screen/screen_flow_decryptPresenter.hpp>
#include <gui/screen_flow_clone_screen/screen_flow_cloneView.hpp>
#include <gui/screen_flow_clone_screen/screen_flow_clonePresenter.hpp>
#include <gui/screen_flow_wallet_screen/screen_flow_walletView.hpp>
#include <gui/screen_flow_wallet_screen/screen_flow_walletPresenter.hpp>
#include <gui/screen_flow_psbt_screen/screen_flow_psbtView.hpp>
#include <gui/screen_flow_psbt_screen/screen_flow_psbtPresenter.hpp>
#include <gui/screen_flow_settings_screen/screen_flow_settingsView.hpp>
#include <gui/screen_flow_settings_screen/screen_flow_settingsPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< screen_initView,
            touchgfx::meta::TypeList< screen_menuView,
            touchgfx::meta::TypeList< screen_flow_encryptView,
            touchgfx::meta::TypeList< screen_flow_decryptView,
            touchgfx::meta::TypeList< screen_flow_cloneView,
            touchgfx::meta::TypeList< screen_flow_walletView,
            touchgfx::meta::TypeList< screen_flow_psbtView,
            touchgfx::meta::TypeList< screen_flow_settingsView,
            touchgfx::meta::Nil > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< screen_initPresenter,
            touchgfx::meta::TypeList< screen_menuPresenter,
            touchgfx::meta::TypeList< screen_flow_encryptPresenter,
            touchgfx::meta::TypeList< screen_flow_decryptPresenter,
            touchgfx::meta::TypeList< screen_flow_clonePresenter,
            touchgfx::meta::TypeList< screen_flow_walletPresenter,
            touchgfx::meta::TypeList< screen_flow_psbtPresenter,
            touchgfx::meta::TypeList< screen_flow_settingsPresenter,
            touchgfx::meta::Nil > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_initScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
