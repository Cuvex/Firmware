/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_FLOW_SETTINGSVIEWBASE_HPP
#define SCREEN_FLOW_SETTINGSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_flow_settings_screen/screen_flow_settingsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>

class screen_flow_settingsViewBase : public touchgfx::View<screen_flow_settingsPresenter>
{
public:
    screen_flow_settingsViewBase();
    virtual ~screen_flow_settingsViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void menuVersionPressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void menuBrightnessPressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void menuLanguagePressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void menuAppearancePressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void versionUpdatePressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void sliderSetDutyCicle(int value)
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void languageEnglishPressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void languageSpanishPressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void appearanceLightPressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void appearanceDarkPressed()
    {
        // Override and implement this function in screen_flow_settings
    }
    virtual void backPressed()
    {
        // Override and implement this function in screen_flow_settings
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::Container s0_menu;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_version;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_brightness;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_language;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_appearance;
    touchgfx::Container s1_version;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_select_update;
    touchgfx::WildcardTextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  update_click_view;
    touchgfx::TextAreaWithTwoWildcards text_version;
    touchgfx::Image logo;
    touchgfx::Container text_caution_alert_spanish;
    touchgfx::TextArea text_caution_spanish_9;
    touchgfx::TextArea text_caution_spanish_8;
    touchgfx::TextArea text_caution_spanish_7;
    touchgfx::TextArea text_caution_spanish_6;
    touchgfx::TextArea text_caution_spanish_5;
    touchgfx::TextArea text_caution_spanish_4;
    touchgfx::TextArea text_caution_spanish_3;
    touchgfx::TextArea text_caution_spanish_2;
    touchgfx::TextArea text_caution_spanish_1;
    touchgfx::Container text_caution_alert_english;
    touchgfx::TextArea text_caution_english_9;
    touchgfx::TextArea text_caution_english_8;
    touchgfx::TextArea text_caution_english_7;
    touchgfx::TextArea text_caution_english_6;
    touchgfx::TextArea text_caution_english_5;
    touchgfx::TextArea text_caution_english_4;
    touchgfx::TextArea text_caution_english_3;
    touchgfx::TextArea text_caution_english_2;
    touchgfx::TextArea text_caution_english_1;
    touchgfx::Container s2_brightness;
    touchgfx::Image image_brightness_high;
    touchgfx::Image image_brightness_low;
    touchgfx::Slider slider_brightness;
    touchgfx::TextArea text_brightness;
    touchgfx::Container s3_language;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_select_lan_spanish;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  >  btn_select_lan_english;
    touchgfx::Image image_english;
    touchgfx::Image image_spanish;
    touchgfx::Image check_language;
    touchgfx::TextArea text_language;
    touchgfx::Container s4_appearance;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  >  btn_select_mode_dark;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  >  btn_select_mode_light;
    touchgfx::Circle darkCircle3;
    touchgfx::PainterRGB888 darkCircle3Painter;
    touchgfx::Circle darkCircle2;
    touchgfx::PainterRGB888 darkCircle2Painter;
    touchgfx::Circle darkCircle1;
    touchgfx::PainterRGB888 darkCircle1Painter;
    touchgfx::Circle lightCircle3;
    touchgfx::PainterRGB888 lightCircle3Painter;
    touchgfx::Circle lightCircle2;
    touchgfx::PainterRGB888 lightCircle2Painter;
    touchgfx::Circle lightCircle1;
    touchgfx::PainterRGB888 lightCircle1Painter;
    touchgfx::Image check_appearance;
    touchgfx::TextArea text_appearance;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  back_button;

    /*
     * Wildcard Buffers
     */
    static const uint16_t UPDATE_CLICK_VIEW_SIZE = 5;
    touchgfx::Unicode::UnicodeChar update_click_viewBuffer[UPDATE_CLICK_VIEW_SIZE];
    static const uint16_t TEXT_VERSIONBUFFER1_SIZE = 25;
    touchgfx::Unicode::UnicodeChar text_versionBuffer1[TEXT_VERSIONBUFFER1_SIZE];
    static const uint16_t TEXT_VERSIONBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_versionBuffer2[TEXT_VERSIONBUFFER2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screen_flow_settingsViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<screen_flow_settingsViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCREEN_FLOW_SETTINGSVIEWBASE_HPP
