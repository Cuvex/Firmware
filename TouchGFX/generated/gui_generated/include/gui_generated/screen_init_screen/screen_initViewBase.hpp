/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_INITVIEWBASE_HPP
#define SCREEN_INITVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_init_screen/screen_initPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class screen_initViewBase : public touchgfx::View<screen_initPresenter>
{
public:
    screen_initViewBase();
    virtual ~screen_initViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::TextAreaWithOneWildcard fw_version;
    touchgfx::Image logo;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FW_VERSION_SIZE = 25;
    touchgfx::Unicode::UnicodeChar fw_versionBuffer[FW_VERSION_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screen_initViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN_INITVIEWBASE_HPP
