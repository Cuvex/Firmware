/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef BOXDICEBASE_HPP
#define BOXDICEBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class boxDiceBase : public touchgfx::Container
{
public:
    boxDiceBase();
    virtual ~boxDiceBase();
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void btnDicePressed()
    {
        // Override and implement this function in boxDice
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Container highlight;
    touchgfx::Box boxh_1;
    touchgfx::Box boxh_2;
    touchgfx::Circle circleh_1;
    touchgfx::PainterRGB888 circleh_1Painter;
    touchgfx::Circle circleh_2;
    touchgfx::PainterRGB888 circleh_2Painter;
    touchgfx::Circle circleh_3;
    touchgfx::PainterRGB888 circleh_3Painter;
    touchgfx::Circle circleh_4;
    touchgfx::PainterRGB888 circleh_4Painter;
    touchgfx::Box box_1;
    touchgfx::Box box_2;
    touchgfx::Circle circle_1;
    touchgfx::PainterRGB888 circle_1Painter;
    touchgfx::Circle circle_2;
    touchgfx::PainterRGB888 circle_2Painter;
    touchgfx::Circle circle_3;
    touchgfx::PainterRGB888 circle_3Painter;
    touchgfx::Circle circle_4;
    touchgfx::PainterRGB888 circle_4Painter;
    touchgfx::TextAreaWithOneWildcard text_dice;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  btn_dice;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_DICE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar text_diceBuffer[TEXT_DICE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<boxDiceBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // BOXDICEBASE_HPP
